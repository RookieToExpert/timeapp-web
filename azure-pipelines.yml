trigger:
  branches:
    include:
    - main
pr:
  branches:
    include:
    - main

variables:
  dockerHubRepo: 'rayrayye/timeapp-web'
  dockerfilePath: 'Dockerfile'          # 你的 web 仓库确实是小写
  buildContext: '.'
  k8sServiceConnection: 'k8s-sc'
  namespace: 'timeapp'
  deployment: 'web'
  container: 'web'

  major: '1'
  counterKey: 'web-1'
  patch: $[ counter(variables['counterKey'], 0) ]
  version: '$(major).$(patch)'

stages:
- stage: Build
  displayName: Build & Push Web Image
  jobs:
  - job: build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Login Docker Hub
      inputs:
        command: login
        containerRegistry: 'toDockerHub'    # 你的 Docker Hub service connection

    - task: Docker@2
      displayName: Build+Push web:$(version)
      inputs:
        command: buildAndPush
        repository: '$(dockerHubRepo)'
        Dockerfile: '$(dockerfilePath)'
        buildContext: '$(buildContext)'
        tags: |
          $(version)

- stage: Deploy
  displayName: Deploy Web to K8s
  dependsOn: Build
  jobs:
  - job: deploy
    steps:
    - task: Kubernetes@1
      displayName: Set image (web → $(version))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(k8sServiceConnection)'
        namespace: '$(namespace)'
        command: 'set'
        arguments: >
          image deployment/$(deployment)
          $(container)=docker.io/$(dockerHubRepo):$(version)

    - task: Kubernetes@1
      displayName: Wait rollout (web)
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(k8sServiceConnection)'
        namespace: '$(namespace)'
        command: 'rollout'
        arguments: 'status deployment/$(deployment) --timeout=120s'
